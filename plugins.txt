			Magento Plugins
			
Plugin or Interceptor is a class that extends or modifies public method's behavior of any class or interface.
By applying code before, after, or around a public method, a plugin extends or modifies that method's behavior.
The first argument for the before, after, and around methods is an object that provides access to all public methods of the observed method's class.


Vendor/Module/etc/di.xml --> file declares a plugin for a class object::
<config>
    <type name="{ObservedType}">
      <plugin name="{pluginName}" type="{PluginClassName}" sortOrder="1" disabled="false" />
    </type>
</config>

*type name -- A class or interface which the plugin observes.
*plugin name -- An arbitrary plugin name that identifies a plugin. Also used to merge the configurations for the plugin.
*plugin type -- The name of a plugin's class or its virtual type. Use the following naming convention when you specify 
 this element: \Vendor\Module\Plugin\<ClassName>.

Example 1.
public function setName($name)
{
  ...
}
plugin methods-> beforeSetName, aroundSetName, afterSetName

Example 2.
public function _construct()
{
  ...
}
plugin methods ->  before_construct ,around_construct, after_construct


